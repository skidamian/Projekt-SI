//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarsManagement.Ria.Web
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using System.Runtime.Serialization;
    using System.ServiceModel;
    using System.ServiceModel.DomainServices;
    using System.ServiceModel.DomainServices.Client;
    using System.ServiceModel.DomainServices.Client.ApplicationServices;
    using System.ServiceModel.Web;
    
    
    /// <summary>
    /// The DomainContext corresponding to the 'CarsManagementDomainService' DomainService.
    /// </summary>
    public sealed partial class CarsManagementDomainContext : DomainContext
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="CarsManagementDomainContext"/> class.
        /// </summary>
        public CarsManagementDomainContext() : 
                this(new WebDomainClient<ICarsManagementDomainServiceContract>(new Uri("CarsManagement-Ria-Web-CarsManagementDomainService.svc", UriKind.Relative)))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="CarsManagementDomainContext"/> class with the specified service URI.
        /// </summary>
        /// <param name="serviceUri">The CarsManagementDomainService service URI.</param>
        public CarsManagementDomainContext(Uri serviceUri) : 
                this(new WebDomainClient<ICarsManagementDomainServiceContract>(serviceUri))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="CarsManagementDomainContext"/> class with the specified <paramref name="domainClient"/>.
        /// </summary>
        /// <param name="domainClient">The DomainClient instance to use for this DomainContext.</param>
        public CarsManagementDomainContext(DomainClient domainClient) : 
                base(domainClient)
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets the set of <see cref="samochody"/> entity instances that have been loaded into this <see cref="CarsManagementDomainContext"/> instance.
        /// </summary>
        public EntitySet<samochody> samochodies
        {
            get
            {
                return base.EntityContainer.GetEntitySet<samochody>();
            }
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="samochody"/> entity instances using the 'GetSamochodies' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="samochody"/> entity instances.</returns>
        public EntityQuery<samochody> GetSamochodiesQuery()
        {
            this.ValidateMethod("GetSamochodiesQuery", null);
            return base.CreateQuery<samochody>("GetSamochodies", null, false, true);
        }
        
        /// <summary>
        /// Creates a new EntityContainer for this DomainContext's EntitySets.
        /// </summary>
        /// <returns>A new container instance.</returns>
        protected override EntityContainer CreateEntityContainer()
        {
            return new CarsManagementDomainContextEntityContainer();
        }
        
        /// <summary>
        /// Service contract for the 'CarsManagementDomainService' DomainService.
        /// </summary>
        [ServiceContract()]
        public interface ICarsManagementDomainServiceContract
        {
            
            /// <summary>
            /// Asynchronously invokes the 'GetSamochodies' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/CarsManagementDomainService/GetSamochodiesDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/CarsManagementDomainService/GetSamochodies", ReplyAction="http://tempuri.org/CarsManagementDomainService/GetSamochodiesResponse")]
            [WebGet()]
            IAsyncResult BeginGetSamochodies(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetSamochodies'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetSamochodies'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetSamochodies' operation.</returns>
            QueryResult<samochody> EndGetSamochodies(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'SubmitChanges' operation.
            /// </summary>
            /// <param name="changeSet">The change-set to submit.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [FaultContract(typeof(DomainServiceFault), Action="http://tempuri.org/CarsManagementDomainService/SubmitChangesDomainServiceFault", Name="DomainServiceFault", Namespace="DomainServices")]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/CarsManagementDomainService/SubmitChanges", ReplyAction="http://tempuri.org/CarsManagementDomainService/SubmitChangesResponse")]
            IAsyncResult BeginSubmitChanges(IEnumerable<ChangeSetEntry> changeSet, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginSubmitChanges'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginSubmitChanges'.</param>
            /// <returns>The collection of change-set entry elements returned from 'SubmitChanges'.</returns>
            IEnumerable<ChangeSetEntry> EndSubmitChanges(IAsyncResult result);
        }
        
        internal sealed class CarsManagementDomainContextEntityContainer : EntityContainer
        {
            
            public CarsManagementDomainContextEntityContainer()
            {
                this.CreateEntitySet<samochody>(EntitySetOperations.All);
            }
        }
    }
    
    /// <summary>
    /// The 'samochody' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/CarsManagement.Ria.Web")]
    public sealed partial class samochody : Entity
    {
        
        private bool _ac;
        
        private int _id;
        
        private string _marka;
        
        private bool _nw;
        
        private bool _oc;
        
        private string _opis;
        
        private short _rok_produkcji;
        
        private string _status_;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnacChanging(bool value);
        partial void OnacChanged();
        partial void OnidChanging(int value);
        partial void OnidChanged();
        partial void OnmarkaChanging(string value);
        partial void OnmarkaChanged();
        partial void OnnwChanging(bool value);
        partial void OnnwChanged();
        partial void OnocChanging(bool value);
        partial void OnocChanged();
        partial void OnopisChanging(string value);
        partial void OnopisChanged();
        partial void Onrok_produkcjiChanging(short value);
        partial void Onrok_produkcjiChanged();
        partial void Onstatus_Changing(string value);
        partial void Onstatus_Changed();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="samochody"/> class.
        /// </summary>
        public samochody()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ac' value.
        /// </summary>
        [ConcurrencyCheck()]
        [DataMember()]
        [RoundtripOriginal()]
        public bool ac
        {
            get
            {
                return this._ac;
            }
            set
            {
                if ((this._ac != value))
                {
                    this.OnacChanging(value);
                    this.RaiseDataMemberChanging("ac");
                    this.ValidateProperty("ac", value);
                    this._ac = value;
                    this.RaiseDataMemberChanged("ac");
                    this.OnacChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'id' value.
        /// </summary>
        [ConcurrencyCheck()]
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnidChanging(value);
                    this.ValidateProperty("id", value);
                    this._id = value;
                    this.RaisePropertyChanged("id");
                    this.OnidChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'marka' value.
        /// </summary>
        [ConcurrencyCheck()]
        [DataMember()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(50)]
        public string marka
        {
            get
            {
                return this._marka;
            }
            set
            {
                if ((this._marka != value))
                {
                    this.OnmarkaChanging(value);
                    this.RaiseDataMemberChanging("marka");
                    this.ValidateProperty("marka", value);
                    this._marka = value;
                    this.RaiseDataMemberChanged("marka");
                    this.OnmarkaChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'nw' value.
        /// </summary>
        [ConcurrencyCheck()]
        [DataMember()]
        [RoundtripOriginal()]
        public bool nw
        {
            get
            {
                return this._nw;
            }
            set
            {
                if ((this._nw != value))
                {
                    this.OnnwChanging(value);
                    this.RaiseDataMemberChanging("nw");
                    this.ValidateProperty("nw", value);
                    this._nw = value;
                    this.RaiseDataMemberChanged("nw");
                    this.OnnwChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'oc' value.
        /// </summary>
        [ConcurrencyCheck()]
        [DataMember()]
        [RoundtripOriginal()]
        public bool oc
        {
            get
            {
                return this._oc;
            }
            set
            {
                if ((this._oc != value))
                {
                    this.OnocChanging(value);
                    this.RaiseDataMemberChanging("oc");
                    this.ValidateProperty("oc", value);
                    this._oc = value;
                    this.RaiseDataMemberChanged("oc");
                    this.OnocChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'opis' value.
        /// </summary>
        [DataMember()]
        [Required()]
        [RoundtripOriginal()]
        public string opis
        {
            get
            {
                return this._opis;
            }
            set
            {
                if ((this._opis != value))
                {
                    this.OnopisChanging(value);
                    this.RaiseDataMemberChanging("opis");
                    this.ValidateProperty("opis", value);
                    this._opis = value;
                    this.RaiseDataMemberChanged("opis");
                    this.OnopisChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'rok_produkcji' value.
        /// </summary>
        [ConcurrencyCheck()]
        [DataMember()]
        [RoundtripOriginal()]
        public short rok_produkcji
        {
            get
            {
                return this._rok_produkcji;
            }
            set
            {
                if ((this._rok_produkcji != value))
                {
                    this.Onrok_produkcjiChanging(value);
                    this.RaiseDataMemberChanging("rok_produkcji");
                    this.ValidateProperty("rok_produkcji", value);
                    this._rok_produkcji = value;
                    this.RaiseDataMemberChanged("rok_produkcji");
                    this.Onrok_produkcjiChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'status_' value.
        /// </summary>
        [ConcurrencyCheck()]
        [DataMember()]
        [Required()]
        [RoundtripOriginal()]
        [StringLength(50)]
        public string status_
        {
            get
            {
                return this._status_;
            }
            set
            {
                if ((this._status_ != value))
                {
                    this.Onstatus_Changing(value);
                    this.RaiseDataMemberChanging("status_");
                    this.ValidateProperty("status_", value);
                    this._status_ = value;
                    this.RaiseDataMemberChanged("status_");
                    this.Onstatus_Changed();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
}
